openapi: '3.0.2'
info:
  title: Business Cash Management
  description: Business Cash Management
  version: '1.0.0'
servers:
  - url: STD21018.business-cash-management.com
tags:
  - name: Health
  - name: Bills
  - name: Expenditure
  - name: Balance
  - name: Item
  - name: Category 
paths:
  /ping:
    get:
      tags:
        - Health
      summary: Check if the server is working
      description: Checking the server's health
      responses:
        200:
          description: Pong
          content:
            text/plain:
              example: Pong
        400:
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/badrequest'
  /bills:
    get:
      tags:
        - Bills
      summary: Get list of bills made on a day
      description: List containing bills made during a specific day
      operationId: getPaymentPerDay
      parameters:
        - name: day
          description: Date on which the bill was made, by default it'll be the current date
          in: query
          schema:
            type: string
            format: date
            example: '2022-07-15'
          required: true
      responses:
        200:
          description: Bills list of the entered day
          content:
            application/json:
              schema:
                type: object
                properties:
                  day: 
                    type: string
                    format: date
                  bills:
                    type: array
                    items:
                      $ref: '#/components/schemas/bill'
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
    post:
      tags:
        - Bills
      summary: Create a bill
      description: How to create a bill
      operationId: createBill
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/newBill'
        required: true
      responses:
        200:
          description: Bill successfully created
          content:
            text/plain:
              example: Bill successfully created
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badrequest'
  /bills/{id}:
    get:
      tags:
        - Bills
      summary: Get details about a bill
      description: Get details about a specific bill
      parameters:
        - name: id
          in: path
          schema: 
            type: number
            example: 1
          required: true
      responses:
        200:
          description: Details about a bill
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/bill'
    patch:
      tags:
        - Bills
      summary: Modify a specific bill
      description: |
          Possible changes on :
          * bill's owner
          * bill's montant
      operationId: modifyBill
      parameters:
        - name: id
          in: path
          schema: 
            type: number
            example: 2
          required: true
      requestBody:
        description: information to be changed
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/newBill'
            examples:
              changeOwner:
                summary: change the owner
                description: Make changes on the bill's owner
                value:
                  newOwner: "Carl Johnson"
              changeValue:
                summary: change the montant
                description: Make changes on the montant of the bill
                value:
                  newMontant: "$100,000"
        required: true
      responses:
        200:
          description: Bill updated
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/bill'
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
    delete:
      tags:
        - Bills
      summary: Delete a specific bill
      description: Delete the bill having the entered id
      parameters:
        - name: id
          in: path
          schema: 
            type: number
            example: 4
          required: true
      responses:
        200:
          description: Bill successfully deleted
          content:
            text/plain:
              example: Bill successfully deleted
        400:
          description: Bad request 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
  /bills/paid:
    get: 
      tags:
        - Bills
      summary: Get paid bills
      description: Get a list containing all paid bills sorted by date
      responses:
        200:
          description: List of paid bills
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/paidBill'
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
  /bills/unpaid:
    get:
      tags:
        - Bills
      summary: Get unpaid bills
      description: Get a list containing unpaid bills sorted by date
      responses:
        200:
          description: List of unpaid bills
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/bill'
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
  /expenditures:
    get: 
      tags:
        - Expenditure
      summary: Get list of expenditures
      description: Get list of expenditures did on a specific day
      parameters:
        - name: day
          description: Date on which the expenditure was made, by default it'll be the current date
          in: query
          schema: 
            type: string
            format: date
            example: "2022-09-09"
          required: true
      responses:
        200:
          description: List of expenditures
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/expenditure'
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
    post: 
      tags:
        - Expenditure
      summary: expend money
      description: How to pay for something
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/newExpenditure'
        required: true
      responses:
        200:
          description: Expenditure successfully done
          content:
            text/plain:
              example: Expenditure successfully done
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
  /expenditures/{id}:
    get:
      tags:
        - Expenditure
      summary: Get a specific expenditure
      description: Get informations about a specific expenditure
      parameters:
        - name: id
          in: path
          schema: 
            type: number
            example: 2
          required: true
      responses:
        200:
          description: Details about an expenditure
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/expenditure'
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
  /balance:
    get:
      tags:
        - Balance
      summary: Get informations about the company's fund
      description: Get informations about the company's fund
      parameters:
        - name: day
          description: Date on which the expenditure was made, by default it'll be the current date
          in: query
          schema:
            type: string
            format: date
            example: "2022-01-01"
          required: true
      responses:
        200:
          description: The company's fund
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/balance'
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
  /items:
    get: 
      tags:
        - Item
      summary: List of items for sale
      description: Get the list of the items for sale
      responses:
        200:
          description: List of items
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/item'
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
    post:   
      tags:
        - Item
      summary: Add a new item 
      description: Add new item for sale
      requestBody:
        content:
          application/json:
            schema: 
              type: array
              items:
                $ref: '#/components/schemas/newItem'
        required: true
      responses:
        200: 
          description: Items successfully added
          content:
            text/plain:
              example: Items successfully added
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
    put: 
      tags:
        - Item
      summary: Modify an Item
      description: How to modify an item
      requestBody: 
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/item'
      responses:
        200: 
          description: Item successfully updated
          content:
            text/plain:
              example: Item successfully updated
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
  /category: 
    get: 
      tags:
        - Category
      summary: Category of an expenditure
      description: How to get the categories of expenditure
      responses:
        200:
          description: List of expenditure categories
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/category'
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
    post: 
      tags:
        - Category
      summary: Add new categories
      description: How to add new categories
      requestBody: 
        content:
          application/json:
            schema: 
              type: array
              items: 
                type: object
                properties:
                  categoryName: 
                    type: string
                    example: "Jirama"
        required: true
      responses:
        200:
          description: Categories added 
          content:
            text/plain:
              example: Categories added 
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
    put: 
      tags:
        - Category
      summary: Update a category
      description: How to change a category name
      requestBody: 
        content:
          application/json:
            schema: 
              type: array
              items:
                $ref: '#/components/schemas/category'
        required: true
      responses:
        200:
          description: Category updated
          content:
            text/plain:
              example: Category updated
        400:
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/badrequest'
components:
  schemas:
    badrequest:
      description: Bad request exception
      type: object
      properties:
        type: 
          type: string
          example: BadRequestException
        message:
          type: string
          example: Bad request
    newItem:
      description: How to add new articles for sale
      type: object
      properties:
        name:
          type: string
          example: "Audi R8"
        unitPrice:
          type: number
          example: 2.000
        quantity:
            type: number
            example: 3
    item:
      description: Things the client could buy
      allOf:
        - $ref: '#/components/schemas/newItem'
      type: object
      properties:
        id:
          type: number
          example: 1
    newBill:
      type: object
      properties:
        owner:
          type: string
          example: Carl Johnson
        OrderItems:
          type: array
          items:
            type: object
            properties:
              idItem:
                type: number
                example: 1
        date:
          type: string
          format: date
    bill:
      description: Bill
      type: object
      properties:
        id: 
          type: number
          example: 01
        owner:
          type: string
          example: 'Martin'
        orderItems:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/item'
        Total:
          type: number
          example: 50,000
        Status:
          type: boolean
          example: false
    paidBill:
      allOf:
        - $ref: '#/components/schemas/newBill'
      description: Bill
      type: object
      properties:
        id: 
          type: number
          example: 1
        montantPaid:
          type: number
          example: 100,000
        Status:
          type: string
          example: 'true'
    category:
        type: object
        properties:
          id: 
            type: integer
            example: 1
          categoryName:
            type: string
            example: "Jirama"
    newExpenditure: 
      type: object
      properties:
        description:
          type: string
          example: "3 Dell Laptops"
        date: 
          type: string 
          format: date
        montant:
          type: number
          example: 30,000
        id_category:
          type: number
          example: 1
    expenditure:
      type: object
      properties:
        id:
          type: number
          example: 2
        description:
          type: string
          example: "3 Dell Laptops"
        date: 
          type: string 
          format: date
          example: "2022-09-12"
        montant:
          type: number
          example: 30,000
      allOf:
        - $ref: '#/components/schemas/category'
    balance:
      type: object
      properties:
        id:
          type: number
          example: 4
        date:
          type: string
          format: date
          example: "2022-01-01"
        montant: 
          type: number
          example: 2,000,000